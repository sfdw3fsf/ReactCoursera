{"ast":null,"code":"import { COMMENTS } from '../shared/comments';\nimport * as ActionTypes from './ActionTypes';\nexport const Comments = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : COMMENTS;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ActionTypes.ADD_COMMENT:\n      var comment = action.payload;\n      comment.id = state.length;\n      comment.date = new Date().toISOString();\n      console.log(\"Comment: \", comment);\n      return state.concat(comment);\n\n    default:\n      return state;\n  }\n};\n_c = Comments;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"names":["COMMENTS","ActionTypes","Comments","state","action","type","ADD_COMMENT","comment","payload","id","length","date","Date","toISOString","console","log","concat"],"sources":["D:/vanhuydangbanhoc/vanhuyhocreact/react/src/redux/comments.js"],"sourcesContent":["import { COMMENTS } from '../shared/comments';\r\nimport * as ActionTypes from './ActionTypes';\r\n\r\nexport const Comments = (state = COMMENTS, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_COMMENT:\r\n            var comment = action.payload;\r\n            comment.id = state.length;\r\n            comment.date = new Date().toISOString();\r\n            console.log(\"Comment: \", comment);\r\n            return state.concat(comment);\r\n\r\n        default:\r\n          return state;\r\n      }\r\n};"],"mappings":"AAAA,SAASA,QAAT,QAAyB,oBAAzB;AACA,OAAO,KAAKC,WAAZ,MAA6B,eAA7B;AAEA,OAAO,MAAMC,QAAQ,GAAG,YAA8B;EAAA,IAA7BC,KAA6B,uEAArBH,QAAqB;EAAA,IAAXI,MAAW;;EAClD,QAAQA,MAAM,CAACC,IAAf;IACI,KAAKJ,WAAW,CAACK,WAAjB;MACI,IAAIC,OAAO,GAAGH,MAAM,CAACI,OAArB;MACAD,OAAO,CAACE,EAAR,GAAaN,KAAK,CAACO,MAAnB;MACAH,OAAO,CAACI,IAAR,GAAe,IAAIC,IAAJ,GAAWC,WAAX,EAAf;MACAC,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBR,OAAzB;MACA,OAAOJ,KAAK,CAACa,MAAN,CAAaT,OAAb,CAAP;;IAEJ;MACE,OAAOJ,KAAP;EATN;AAWH,CAZM;KAAMD,Q"},"metadata":{},"sourceType":"module"}